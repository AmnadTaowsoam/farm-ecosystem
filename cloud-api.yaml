openapi: 3.0.3
info:
  title: Cloud API (Smart Farming CRUD)
  version: "1.0.0"
  description: API สำหรับจัดการข้อมูลฟาร์ม, ลูกค้า, สัตว์, อุปกรณ์ ฯลฯ

security:
  - bearerAuth: []

paths:
  /customers:
    get:
      summary: ดึงรายการลูกค้าทั้งหมด
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      summary: สร้างลูกค้าใหม่
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'

  /customers/{id}:
    get:
      summary: ดึงข้อมูลลูกค้ารายตัว
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    put:
      summary: แก้ไขข้อมูลลูกค้า
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      summary: ลบลูกค้า
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: No Content

# ตัวอย่าง schemas

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Customer:
      type: object
      properties:
        customer_id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        billing_info:
          type: object
          description: JSON object
        created_at:
          type: string
          format: date-time

    CustomerCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        billing_info:
          type: object

    CustomerUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        billing_info:
          type: object
